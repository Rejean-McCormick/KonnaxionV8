# Generated by Django 5.1.6 on 2025-02-11 19:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExpertiseTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the expertise tag",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the expertise tag",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReputationProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reputation_score",
                    models.FloatField(default=0, help_text="Overall reputation score"),
                ),
                (
                    "ethical_multiplier",
                    models.FloatField(
                        default=1.0, help_text="Multiplier used for ethical adjustments"
                    ),
                ),
                (
                    "expertise_tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Expertise tags assigned to the user",
                        related_name="profiles",
                        to="ekoh.expertisetag",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="User's reputation profile",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reputation_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReputationEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type of event (e.g., vote, contribution)",
                        max_length=50,
                    ),
                ),
                (
                    "event_value",
                    models.FloatField(help_text="Numerical impact of the event"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Context or description of the event",
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the event occurred"
                    ),
                ),
                (
                    "reputation_profile",
                    models.ForeignKey(
                        help_text="Associated reputation profile",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="ekoh.reputationprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WeightedVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "target_id",
                    models.PositiveIntegerField(
                        help_text="ID of the target (e.g., a debate argument)"
                    ),
                ),
                (
                    "vote_value",
                    models.IntegerField(help_text="Vote value (e.g., +1 or -1)"),
                ),
                (
                    "weight",
                    models.FloatField(help_text="Vote weight based on reputation"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Timestamp when the vote was cast"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User casting the vote",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weighted_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
